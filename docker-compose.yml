version: '3.9'

services:

  mysql:
    container_name: mysql
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: p@ssw0rd
    volumes:
      - mysql-volume:/var/lib/mysql
    ports:
      - 3306:3306
    networks:
      - app-network

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin:latest
    restart: always
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: p@ssw0rd
    ports:
      - 13306:80
    networks:
      - app-network
    depends_on:
      - mysql

  redis:
    container_name: redis
    image: redis:latest
    command: redis-server --requirepass p@ssw0rd --bind 0.0.0.0
    restart: always
    volumes:
      - redis-volume:/data
    ports:
      - 6379:6379
    networks:
      - app-network

  redis-commander:
    container_name: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=p@ssw0rd
      - HTTP_USER=administrator
      - HTTP_PASSWORD=p@ssw0rd
    ports:
      - 16379:8081
    networks:
      - app-network
    depends_on:
      - redis

  identity-service:
    container_name: identity-service
    build:
      context: ./identity-service
      dockerfile: Dockerfile
    env_file:
      - ./identity-service/.env.production
    networks:
      - app-network
    depends_on:
      - mysql
      - redis

  api-gateway:
    container_name: api-gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - 8080:80
    networks:
      - app-network
    depends_on:
    - identity-service

volumes:
  mysql-volume:
    driver: local
  redis-volume:
    driver: local

networks:
  app-network:
    driver: bridge